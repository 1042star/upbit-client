{
  "swagger": "2.0",
  "info": {
    "title": "Upbit Open API",
    "description": "## REST API for Upbit Exchange\n- Base URL: [https://api.upbit.com]\n- Official Upbit API Documents: [https://docs.upbit.com]\n- Official Support email: [open-api@upbit.com]\n",
    "version": "1.0.0",
    "contact": {
      "url": "https://github.com/uJhin",
      "email": "ujhin942@gmail.com"
    }
  },
  "host": "api.upbit.com",
  "basePath": "/v1",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "APIKey",
      "description": "API 키"
    },
    {
      "name": "Account",
      "description": "자산"
    },
    {
      "name": "Order",
      "description": "주문"
    },
    {
      "name": "Deposit",
      "description": "입금"
    },
    {
      "name": "Withdraw",
      "description": "출금"
    },
    {
      "name": "Market",
      "description": "마켓"
    },
    {
      "name": "Candle",
      "description": "시세 캔들"
    },
    {
      "name": "Trade",
      "description": "거래"
    }
  ],
  "paths": {
    "/api_keys": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "APIKey"
        ],
        "summary": "API 키 리스트 조회",
        "description": "## API 키 목록 및 만료 일자를 조회합니다.\n",
        "operationId": "APIKey.info",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/APIKey"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/accounts": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Account"
        ],
        "summary": "전체 계좌 조회",
        "description": "## 내가 보유한 자산 리스트를 보여줍니다.\n",
        "operationId": "Account.info",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/status/wallet": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Account"
        ],
        "summary": "입출금 현황",
        "description": "## 입출금 현황 및 블록 상태를 조회합니다.\n\n**NOTE**: 입출금 현황 데이터는 실제 서비스 상태와 다를 수 있습니다.\n\n입출금 현황 API에서 제공하는 입출금 상태, 블록 상태 정보는 수 분 정도 지연되어 반영될 수 있습니다.\n본 API는 참고용으로만 사용하시길 바라며 실제 입출금을 수행하기 전에는 반드시 업비트 공지사항 및 입출금 현황 페이지를 참고해주시기 바랍니다.\n",
        "operationId": "Account.wallet",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Wallet"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/orderbook": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Order"
        ],
        "summary": "시세 호가 정보(Orderbook) 조회",
        "description": "## 호가 정보 조회\n",
        "operationId": "Order.orderbook",
        "parameters": [
          {
            "in": "query",
            "name": "markets",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": true,
            "description": "마켓 코드 목록 (ex. KRW-BTC,KRW-ADA)\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Orderbook"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/orders/chance": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Order"
        ],
        "summary": "주문 가능 정보",
        "description": "## 마켓별 주문 가능 정보를 확인한다.\n",
        "operationId": "Order.chance",
        "parameters": [
          {
            "in": "query",
            "name": "market",
            "type": "string",
            "required": true,
            "description": "Market ID\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrderChance"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/order": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Order"
        ],
        "summary": "개별 주문 조회",
        "description": "## 주문 UUID를 통해 개별 주문건을 조회한다.\n\n**NOTE**: `uuid` 혹은 `identifier` 둘 중 하나의 값이 반드시 포함되어야 합니다.\n",
        "operationId": "Order.info",
        "parameters": [
          {
            "in": "query",
            "name": "uuid",
            "type": "string",
            "required": false,
            "description": "주문 UUID\n"
          },
          {
            "in": "query",
            "name": "identifier",
            "type": "string",
            "required": false,
            "description": "조회용 사용자 지정 값\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OrderInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Order"
        ],
        "summary": "주문 취소 접수",
        "description": "## 주문 UUID를 통해 해당 주문에 대한 취소 접수를 한다.\n\n**NOTE**: `uuid` 혹은 `identifier` 둘 중 하나의 값이 반드시 포함되어야 합니다.\n",
        "operationId": "Order.cancel",
        "parameters": [
          {
            "in": "query",
            "name": "uuid",
            "type": "string",
            "required": false,
            "description": "취소할 주문의 UUID\n"
          },
          {
            "in": "query",
            "name": "identifier",
            "type": "string",
            "required": false,
            "description": "조회용 사용자 지정 값\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Order"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Order"
        ],
        "summary": "주문 리스트 조회",
        "description": "## 주문 리스트를 조회한다.\n",
        "operationId": "Order.info_all",
        "parameters": [
          {
            "in": "query",
            "name": "market",
            "type": "string",
            "required": false,
            "description": "마켓 아이디\n"
          },
          {
            "in": "query",
            "name": "state",
            "type": "string",
            "required": false,
            "description": "주문 상태\n  - wait : 체결 대기 (default)\n  - done : 전체 체결 완료\n  - cancel : 주문 취소\n"
          },
          {
            "in": "query",
            "name": "states",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false,
            "description": "주문 상태의 목록\n"
          },
          {
            "in": "query",
            "name": "uuids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false,
            "description": "주문 UUID의 목록\n"
          },
          {
            "in": "query",
            "name": "identifiers",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false,
            "description": "주문 identifier의 목록\n"
          },
          {
            "in": "query",
            "name": "page",
            "type": "number",
            "required": false,
            "description": "페이지 수, default: 1\n"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "number",
            "required": false,
            "description": "요청 개수, default: 100\n"
          },
          {
            "in": "query",
            "name": "order_by",
            "type": "string",
            "required": false,
            "description": "정렬 방식\n- asc : 오름차순\n- desc : 내림차순 (default)\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Order"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Order"
        ],
        "summary": "주문하기",
        "description": "## 주문 요청을 한다.\n\n**NOTE**: 원화 마켓 가격 단위를 확인하세요.\n\n원화 마켓에서 주문을 요청 할 경우, [원화 마켓 주문 가격 단위](https://docs.upbit.com/docs/market-info-trade-price-detail)를 확인하여 값을 입력해주세요.\n\n**NOTE**: identifier 파라미터 사용\n\n`identifier`는 서비스에서 발급하는 `uuid`가 아닌 이용자가 직접 발급하는 키값으로,\n주문을 조회하기 위해 할당하는 값입니다.\n해당 값은 사용자의 전체 주문 내 유일한 값을 전달해야하며,\n비록 주문 요청시 오류가 발생하더라도 같은 값으로 다시 요청을 보낼 수 없습니다.\n\n주문의 성공 / 실패 여부와 관계없이 중복해서 들어온 `identifier` 값에서는 중복 오류가 발생하니,\n매 요청시 새로운 값을 생성해주세요.\n\n**NOTE**: 시장가 주문\n\n시장가 주문은 `ord_type` 필드를 `price` or `market` 으로 설정해야됩니다.\n매수 주문의 경우 `ord_type`을 `price`로 설정하고 `volume`을 `null` 혹은 제외해야됩니다.\n매도 주문의 경우 `ord_type`을 `market`로 설정하고 `price`을 `null` 혹은 제외해야됩니다.\n",
        "operationId": "Order.new",
        "consumes": [
          "application/x-www-form-urlencoded",
          "multipart/form-data",
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "market",
            "type": "string",
            "required": true,
            "description": "마켓 ID (필수)\n"
          },
          {
            "in": "formData",
            "name": "side",
            "type": "string",
            "required": true,
            "description": "주문 종류 (필수)\n- bid : 매수\n- ask : 매도\n"
          },
          {
            "in": "formData",
            "name": "volume",
            "type": "string",
            "default": null,
            "required": false,
            "description": "주문량 (지정가, 시장가 매도 시 필수)\n"
          },
          {
            "in": "formData",
            "name": "price",
            "type": "string",
            "default": null,
            "required": false,
            "description": "주문 가격. (지정가, 시장가 매수 시 필수)\n\nex) KRW-BTC 마켓에서 1BTC당 1,000 KRW로 거래할 경우, 값은 1000 이 된다.\nex) KRW-BTC 마켓에서 1BTC당 매도 1호가가 500 KRW 인 경우, 시장가 매수 시 값을 1000으로 세팅하면 2BTC가 매수된다.\n(수수료가 존재하거나 매도 1호가의 수량에 따라 상이할 수 있음)\n"
          },
          {
            "in": "formData",
            "name": "ord_type",
            "type": "string",
            "required": true,
            "description": "주문 타입 (필수)\n- limit : 지정가 주문\n- price : 시장가 주문(매수)\n- market : 시장가 주문(매도)\n"
          },
          {
            "in": "formData",
            "name": "identifier",
            "type": "string",
            "required": false,
            "description": "조회용 사용자 지정값 (선택)\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NewOrder"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/NewOrder"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/withdraws": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Withdraw"
        ],
        "summary": "출금 리스트 조회",
        "description": "## 출금 리스트를 조회한다.\n",
        "operationId": "Withdraw.info_all",
        "parameters": [
          {
            "in": "query",
            "name": "currency",
            "type": "string",
            "required": false,
            "description": "Currency 코드\n"
          },
          {
            "in": "query",
            "name": "state",
            "type": "string",
            "required": false,
            "description": "출금 상태\n- submitting : 처리 중\n- submitted : 처리 완료\n- almost_accepted : 출금대기중\n- rejected : 거부\n- accepted : 승인됨\n- processing : 처리 중\n- done : 완료\n- canceled : 취소됨\n"
          },
          {
            "in": "query",
            "name": "uuids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false,
            "description": "출금 UUID의 목록\n"
          },
          {
            "in": "query",
            "name": "txids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false,
            "description": "출금 TXID의 목록\n"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "number",
            "required": false,
            "description": "개수 제한 (default: 100, max: 100)\n"
          },
          {
            "in": "query",
            "name": "page",
            "type": "number",
            "required": false,
            "description": "페이지 수, default: 1\n"
          },
          {
            "in": "query",
            "name": "order_by",
            "type": "string",
            "required": false,
            "description": "정렬 방식\n- asc : 오름차순\n- desc : 내림차순 (default)\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Withdraw"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/withdraw": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Withdraw"
        ],
        "summary": "개별 출금 조회",
        "description": "## 출금 UUID를 통해 개별 출금 정보를 조회한다.\n",
        "operationId": "Withdraw.info",
        "parameters": [
          {
            "in": "query",
            "name": "uuid",
            "type": "string",
            "required": false,
            "description": "출금 UUID\n"
          },
          {
            "in": "query",
            "name": "txid",
            "type": "string",
            "required": false,
            "description": "출금 TXID\n"
          },
          {
            "in": "query",
            "name": "currency",
            "type": "string",
            "required": false,
            "description": "Currency 코드\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Withdraw"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/withdraws/chance": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Withdraw"
        ],
        "summary": "출금 가능 정보",
        "description": "## 해당 통화의 가능한 출금 정보를 확인한다.\n",
        "operationId": "Withdraw.chance",
        "parameters": [
          {
            "in": "query",
            "name": "currency",
            "type": "string",
            "required": true,
            "description": "Currency Symbol\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WithdrawChance"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/withdraws/coin": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Withdraw"
        ],
        "summary": "코인 출금하기",
        "description": "## 코인 출금을 요청한다.\n\n**NOTE**: 바로출금 이용 시 유의사항\n\n업비트 회원의 주소가 아닌 주소로 바로출금을 요청하는 경우, 출금이 정상적으로 수행되지 않습니다.\n반드시 주소를 확인 후 출금을 진행하시기 바랍니다.\n",
        "operationId": "Withdraw.coin",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "currency",
            "type": "string",
            "required": true,
            "description": "Currency 코드\n"
          },
          {
            "in": "formData",
            "name": "amount",
            "type": "string",
            "required": true,
            "description": "출금 수량\n"
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string",
            "required": true,
            "description": "출금 가능 주소에 등록된 출금 주소\n"
          },
          {
            "in": "formData",
            "name": "secondary_address",
            "type": "string",
            "required": false,
            "description": "2차 출금 주소 (필요한 코인에 한해서)\n"
          },
          {
            "in": "formData",
            "name": "transaction_type",
            "type": "string",
            "required": false,
            "description": "출금 유형\n- default : 일반출금\n- internal : 바로출금\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WithdrawCoin"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/withdraws/krw": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Withdraw"
        ],
        "summary": "원화 출금하기",
        "description": "## 원화 출금을 요청한다. 등록된 출금 계좌로 출금된다.\n",
        "operationId": "Withdraw.krw",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "amount",
            "type": "string",
            "required": true,
            "description": "출금 원화 수량\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Withdraw"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/deposits": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Deposit"
        ],
        "summary": "입금 리스트 조회",
        "description": "## 입금 리스트 조회\n",
        "operationId": "Deposit.info_all",
        "parameters": [
          {
            "in": "query",
            "name": "currency",
            "type": "string",
            "required": false,
            "description": "Currency 코드\n"
          },
          {
            "in": "query",
            "name": "state",
            "type": "string",
            "required": false,
            "description": "출금 상태\n- submitting : 처리 중\n- submitted : 처리완료\n- almost_accepted : 입금 대기 중\n- rejected : 거절\n- accepted : 승인됨\n- processing : 처리 중\n"
          },
          {
            "in": "query",
            "name": "uuids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false,
            "description": "입금 UUID의 목록\n"
          },
          {
            "in": "query",
            "name": "txids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "required": false,
            "description": "입금 TXID의 목록\n"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "number",
            "required": false,
            "description": "개수 제한 (default: 100, max: 100)\n"
          },
          {
            "in": "query",
            "name": "page",
            "type": "number",
            "required": false,
            "description": "페이지 수, default: 1\n"
          },
          {
            "in": "query",
            "name": "order_by",
            "type": "string",
            "required": false,
            "description": "정렬 방식\n- asc : 오름차순\n- desc : 내림차순 (default)\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Deposit"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/deposit": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Deposit"
        ],
        "summary": "개별 입금 조회",
        "description": "## 개별 입금 조회\n",
        "operationId": "Deposit.info",
        "parameters": [
          {
            "in": "query",
            "name": "uuid",
            "type": "string",
            "required": false,
            "description": "입금 UUID\n"
          },
          {
            "in": "query",
            "name": "txid",
            "type": "string",
            "required": false,
            "description": "입금 TXID\n"
          },
          {
            "in": "query",
            "name": "currency",
            "type": "string",
            "required": false,
            "description": "Currency 코드\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deposit"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/deposits/generate_coin_address": {
      "post": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Deposit"
        ],
        "summary": "입금 주소 생성 요청",
        "description": "입금 주소 생성을 요청한다.\n\n**NOTE**: 입금 주소 생성 요청 API 유의사항\n\n입금 주소의 생성은 서버에서 비동기적으로 이뤄집니다.\n비동기적 생성 특성상 요청과 동시에 입금 주소가 발급되지 않을 수 있습니다.\n주소 발급 요청 시 결과로 Response1이 반환되며 주소 발급 완료 이전까지 계속 Response1이 반환됩니다.\n주소가 발급된 이후부터는 새로운 주소가 발급되는 것이 아닌 이전에 발급된 주소가 Response2 형태로 반환됩니다.\n정상적으로 주소가 생성되지 않는다면 일정 시간 이후 해당 API를 다시 호출해주시길 부탁드립니다.\n",
        "operationId": "Deposit.generate_coin_address",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "currency",
            "type": "string",
            "required": true,
            "description": "Currency 코드\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DepositCompleteResponse"
            }
          },
          "201": {
            "description": "Create",
            "schema": {
              "$ref": "#/definitions/DepositTransferResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/deposits/coin_addresses": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Deposit"
        ],
        "summary": "전체 입금 주소 조회",
        "description": "## 내가 보유한 자산 리스트를 보여줍니다.\n\n**NOTE**: 입금 주소 조회 요청 API 유의사항\n\n입금 주소 생성 요청 이후 아직 발급되지 않은 상태일 경우 deposit_address가 null일 수 있습니다.\n",
        "operationId": "Deposit.coin_addresses",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/DepositCompleteResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/deposits/coin_address": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Deposit"
        ],
        "summary": "개별 입금 주소 조회",
        "description": "## 개별 입금 주소 조회\n\n**NOTE**: 입금 주소 조회 요청 API 유의사항\n\n입금 주소 생성 요청 이후 아직 발급되지 않은 상태일 경우 deposit_address가 null일 수 있습니다.\n",
        "operationId": "Deposit.coin_address",
        "parameters": [
          {
            "in": "query",
            "name": "currency",
            "type": "string",
            "required": true,
            "description": "Currency symbol\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DepositCompleteResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/market/all": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Market"
        ],
        "summary": "마켓 코드 조회",
        "description": "## 업비트에서 거래 가능한 마켓 목록\n",
        "operationId": "Market.info_all",
        "parameters": [
          {
            "in": "query",
            "name": "isDetails",
            "type": "boolean",
            "default": false,
            "required": false,
            "description": "유의종목 필드과 같은 상세 정보 노출 여부(선택 파라미터)\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/MarketInfo"
              }
            }
          },
          "400": {
            "description": "Status: Bad Request\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Status: Unauthorized\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Status: Forbidden\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Status: Not Found\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Status: Internal Server Error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/candles/minutes/{unit}": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Candle"
        ],
        "summary": "시세 캔들 조회 (분 단위)",
        "description": "## 분(Minute) 캔들\n",
        "operationId": "Candle.minutes",
        "parameters": [
          {
            "in": "path",
            "name": "unit",
            "type": "integer",
            "required": true,
            "description": "분 단위.\n가능한 값 : 1, 3, 5, 15, 10, 30, 60, 240\n"
          },
          {
            "in": "query",
            "name": "market",
            "type": "string",
            "required": true,
            "description": "마켓 코드 (ex. KRW-BTC)\n"
          },
          {
            "in": "query",
            "name": "to",
            "type": "string",
            "required": false,
            "description": "마지막 캔들 시각 (exclusive).\n포맷 : `yyyy-MM-dd'T'HH:mm:ssXXX` or `yyyy-MM-dd HH:mm:ss`.\n비워서 요청 시 가장 최근 캔들\n"
          },
          {
            "in": "query",
            "name": "count",
            "type": "number",
            "format": "int32",
            "required": false,
            "description": "캔들 개수 (최대 200개까지 요청 가능)\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/CandleMinutes"
              }
            }
          },
          "400": {
            "description": "Status: Bad Request\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Status: Unauthorized\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Status: Forbidden\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Status: Not Found\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Status: Internal Server Error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/candles/days": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Candle"
        ],
        "summary": "시세 캔들 조회 (일 단위)",
        "description": "## 일(Day) 캔들\n",
        "operationId": "Candle.days",
        "parameters": [
          {
            "in": "query",
            "name": "market",
            "type": "string",
            "required": true,
            "description": "마켓 코드 (ex. KRW-BTC)\n"
          },
          {
            "in": "query",
            "name": "to",
            "type": "string",
            "required": false,
            "description": "마지막 캔들 시각 (exclusive).\n포맷 : `yyyy-MM-dd'T'HH:mm:ssXXX` or `yyyy-MM-dd HH:mm:ss`.\n비워서 요청 시 가장 최근 캔들\n"
          },
          {
            "in": "query",
            "name": "count",
            "type": "number",
            "format": "int32",
            "required": false,
            "description": "캔들 개수\n"
          },
          {
            "in": "query",
            "name": "convertingPriceUnit",
            "type": "string",
            "default": "KRW",
            "required": false,
            "description": "종가 환산 화폐 단위 (생략 가능, KRW로 명시할 시 원화 환산 가격을 반환.)\n\n`convertingPriceUnit` 파라미터의 경우, 원화 마켓이 아닌 다른 마켓(ex. BTC, ETH)의 일봉 요청 시\n종가를 명시된 파라미터 값으로 환산해 `converted_trade_price` 필드에 추가하여 반환합니다.\n현재는 원화(`KRW`) 로 변환하는 기능만 제공하며 추후 기능을 확장할 수 있습니다.\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/CandleDays"
              }
            }
          },
          "400": {
            "description": "Status: Bad Request\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Status: Unauthorized\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Status: Forbidden\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Status: Not Found\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Status: Internal Server Error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/candles/weeks": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Candle"
        ],
        "summary": "시세 캔들 조회 (주 단위)",
        "description": "## 주(Week) 캔들\n",
        "operationId": "Candle.weeks",
        "parameters": [
          {
            "in": "query",
            "name": "market",
            "type": "string",
            "required": true,
            "description": "마켓 코드 (ex. KRW-BTC)\n"
          },
          {
            "in": "query",
            "name": "to",
            "type": "string",
            "required": false,
            "description": "마지막 캔들 시각 (exclusive).\n포맷 : `yyyy-MM-dd'T'HH:mm:ssXXX` or `yyyy-MM-dd HH:mm:ss`.\n비워서 요청 시 가장 최근 캔들\n"
          },
          {
            "in": "query",
            "name": "count",
            "type": "number",
            "format": "int32",
            "required": false,
            "description": "캔들 개수\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/CandleDate"
              }
            }
          },
          "400": {
            "description": "Status: Bad Request\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Status: Unauthorized\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Status: Forbidden\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Status: Not Found\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Status: Internal Server Error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/candles/months": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Candle"
        ],
        "summary": "시세 캔들 조회 (월 단위)",
        "description": "## 월(Month) 캔들\n",
        "operationId": "Candle.month",
        "parameters": [
          {
            "in": "query",
            "name": "market",
            "type": "string",
            "required": true,
            "description": "마켓 코드 (ex. KRW-BTC)\n"
          },
          {
            "in": "query",
            "name": "to",
            "type": "string",
            "required": false,
            "description": "마지막 캔들 시각 (exclusive).\n포맷 : `yyyy-MM-dd'T'HH:mm:ssXXX` or `yyyy-MM-dd HH:mm:ss`.\n비워서 요청 시 가장 최근 캔들\n"
          },
          {
            "in": "query",
            "name": "count",
            "type": "number",
            "format": "int32",
            "required": false,
            "description": "캔들 개수\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/CandleDate"
              }
            }
          },
          "400": {
            "description": "Status: Bad Request\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Status: Unauthorized\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Status: Forbidden\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Status: Not Found\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Status: Internal Server Error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/trades/ticks": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Trade"
        ],
        "summary": "시세 체결 조회",
        "description": "## 최근 체결 내역\n",
        "operationId": "Trade.ticks",
        "parameters": [
          {
            "in": "query",
            "name": "market",
            "type": "string",
            "required": true,
            "description": "마켓 코드 (ex. KRW-BTC, BTC-BCC)\n"
          },
          {
            "in": "query",
            "name": "to",
            "type": "string",
            "required": false,
            "description": "마지막 체결 시각.\n형식 : `[HHmmss 또는 HH:mm:ss]`.\n비워서 요청시 가장 최근 데이터\n"
          },
          {
            "in": "query",
            "name": "count",
            "type": "number",
            "format": "int32",
            "required": false,
            "description": "체결 개수\n"
          },
          {
            "in": "query",
            "name": "cursor",
            "type": "string",
            "required": false,
            "description": "페이지네이션 커서 (sequentialId)\n\n`sequential_id` 필드는 체결의 유일성 판단을 위한 근거로 쓰일 수 있습니다.\n하지만 체결의 순서를 보장하지는 못합니다.\n"
          },
          {
            "in": "query",
            "name": "daysAgo",
            "type": "number",
            "format": "int32",
            "required": false,
            "description": "최근 체결 날짜 기준 7일 이내의 이전 데이터 조회 가능.\n비워서 요청 시 가장 최근 체결 날짜 반환. (범위: 1 ~ 7)\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/TradeTicks"
              }
            }
          },
          "400": {
            "description": "Status: Bad Request\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Status: Unauthorized\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Status: Forbidden\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Status: Not Found\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Status: Internal Server Error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/ticker": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "Trade"
        ],
        "summary": "시세 Ticker 조회",
        "description": "## 현재가 정보\n요청 당시 종목의 스냅샷을 반환한다.\n",
        "operationId": "Trade.ticker",
        "parameters": [
          {
            "in": "query",
            "name": "markets",
            "type": "string",
            "required": true,
            "description": "반점으로 구분되는 마켓 코드 (ex. KRW-BTC, BTC-BCC)\n"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/Ticker"
              }
            }
          },
          "400": {
            "description": "Status: Bad Request\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Status: Unauthorized\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Status: Forbidden\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Status: Not Found\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Status: Internal Server Error\n",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/ErrorInfo"
        }
      }
    },
    "ErrorInfo": {
      "type": "object",
      "description": "Error 상세 정보",
      "properties": {
        "message": {
          "type": "string",
          "description": "Error 메시지",
          "example": "error message"
        },
        "name": {
          "type": "string",
          "description": "Error 명칭",
          "example": "error name"
        }
      }
    },
    "APIKey": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "example": "xxxxxxxxxxxxxxxxxxxxxxxx"
        },
        "expire_at": {
          "type": "string",
          "example": "2021-03-09T12:39:39.000Z"
        }
      }
    },
    "Account": {
      "type": "object",
      "description": "사용자의 계좌 정보",
      "properties": {
        "currency": {
          "type": "string",
          "description": "화폐를 의미하는 영문 대문자 코드",
          "example": "KRW"
        },
        "balance": {
          "type": "string",
          "description": "주문가능 금액/수량",
          "example": 1000000
        },
        "locked": {
          "type": "string",
          "description": "주문 중 묶여있는 금액/수량",
          "example": 0
        },
        "avg_buy_price": {
          "type": "string",
          "description": "매수평균가",
          "example": 101000
        },
        "avg_buy_price_modified": {
          "type": "boolean",
          "description": "매수평균가 수정 여부",
          "example": false
        },
        "unit_currency": {
          "type": "string",
          "description": "평단가 기준 화폐",
          "example": "KRW"
        }
      }
    },
    "Wallet": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string",
          "description": "화폐를 의미하는 영문 대문자 코드",
          "example": "BTC"
        },
        "wallet_state": {
          "type": "string",
          "description": "입출금 상태\n- working : 입출금 가능\n- withdraw_only : 출금만 가능\n- deposit_only : 입금만 가능\n- paused : 입출금 중단\n- unsupported : 입출금 미지원\n",
          "example": "working"
        },
        "block_state": {
          "type": "string",
          "description": "블록 상태\n- normal : 정상\n- delayed : 지연\n- inactive : 비활성 (점검 등)\n",
          "example": "normal"
        },
        "block_height": {
          "type": "number",
          "format": "int32",
          "description": "블록 높이",
          "example": 637432
        },
        "block_updated_at": {
          "type": "string",
          "description": "블록 갱신 시각",
          "example": "2020-07-03T02:04:45.523Z"
        }
      }
    },
    "Orderbook": {
      "type": "object",
      "properties": {
        "market": {
          "type": "string",
          "description": "마켓 코드",
          "example": "KRW-BTC"
        },
        "timestamp": {
          "type": "number",
          "format": "int64",
          "description": "호가 생성 시각",
          "example": 1529910247984
        },
        "total_ask_size": {
          "type": "number",
          "format": "double",
          "description": "호가 매도 총 잔량",
          "example": 8.83621228
        },
        "total_bid_size": {
          "type": "number",
          "format": "double",
          "description": "호가 매수 총량",
          "example": 2.43976741
        },
        "orderbook_units": {
          "type": "array",
          "format": "array",
          "items": {
            "$ref": "#/definitions/OrderbookUnit"
          },
          "description": "호가"
        }
      }
    },
    "OrderbookUnit": {
      "type": "object",
      "properties": {
        "ask_price": {
          "type": "number",
          "format": "double",
          "description": "매도호가",
          "example": 6956000
        },
        "bid_price": {
          "type": "number",
          "format": "double",
          "description": "매수호가",
          "example": 6954000
        },
        "ask_size": {
          "type": "number",
          "format": "double",
          "description": "매도 잔량",
          "example": 0.24078656
        },
        "bid_size": {
          "type": "number",
          "format": "double",
          "description": "매수 잔량",
          "example": 0.00718341
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "주문의 고유 아이디",
          "example": "9ca023a5-851b-4fec-9f0a-48cd83c2eaae"
        },
        "side": {
          "type": "string",
          "description": "주문 종류",
          "example": "ask"
        },
        "ord_type": {
          "type": "string",
          "description": "주문 방식",
          "example": "limit"
        },
        "price": {
          "type": "string",
          "description": "주문 당시 화폐 가격",
          "example": 4280000
        },
        "state": {
          "type": "string",
          "description": "주문 상태",
          "example": "done"
        },
        "market": {
          "type": "string",
          "description": "마켓의 유일키",
          "example": "KRW-BTC"
        },
        "created_at": {
          "type": "string",
          "description": "주문 생성 시간",
          "example": "2019-01-04T04:48:09.000Z"
        },
        "volume": {
          "type": "string",
          "description": "사용자가 입력한 주문 양",
          "example": 1
        },
        "remaining_volume": {
          "type": "string",
          "description": "체결 후 남은 주문 양",
          "example": 0
        },
        "reserved_fee": {
          "type": "string",
          "description": "수수료로 예약된 비용",
          "example": 0
        },
        "remaining_fee": {
          "type": "string",
          "description": "남은 수수료",
          "example": 0
        },
        "paid_fee": {
          "type": "string",
          "description": "사용된 수수료",
          "example": 2140
        },
        "locked": {
          "type": "string",
          "description": "거래에 사용중인 비용",
          "example": 0
        },
        "executed_volume": {
          "type": "string",
          "description": "체결된 양",
          "example": 1
        },
        "trades_count": {
          "type": "number",
          "format": "int32",
          "description": "해당 주문에 걸린 체결 수",
          "example": 1
        }
      }
    },
    "NewOrder": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "주문의 고유 아이디",
          "example": "9ca023a5-851b-4fec-9f0a-48cd83c2eaae"
        },
        "side": {
          "type": "string",
          "description": "주문 종류",
          "example": "ask"
        },
        "ord_type": {
          "type": "string",
          "description": "주문 방식",
          "example": "limit"
        },
        "price": {
          "type": "string",
          "description": "주문 당시 화폐 가격",
          "example": 4280000
        },
        "avg_price": {
          "type": "string",
          "description": "체결 가격의 평균가",
          "example": 0
        },
        "state": {
          "type": "string",
          "description": "주문 상태",
          "example": "done"
        },
        "market": {
          "type": "string",
          "description": "마켓의 유일키",
          "example": "KRW-BTC"
        },
        "created_at": {
          "type": "string",
          "description": "주문 생성 시간",
          "example": "2019-01-04T13:48:09+09:00"
        },
        "volume": {
          "type": "string",
          "description": "사용자가 입력한 주문 양",
          "example": 1
        },
        "remaining_volume": {
          "type": "string",
          "description": "체결 후 남은 주문 양",
          "example": 0
        },
        "reserved_fee": {
          "type": "string",
          "description": "수수료로 예약된 비용",
          "example": 0
        },
        "remaining_fee": {
          "type": "string",
          "description": "남은 수수료",
          "example": 0
        },
        "paid_fee": {
          "type": "string",
          "description": "사용된 수수료",
          "example": 2140
        },
        "locked": {
          "type": "string",
          "description": "거래에 사용중인 비용",
          "example": 0
        },
        "executed_volume": {
          "type": "string",
          "description": "체결된 양",
          "example": 1
        },
        "trades_count": {
          "type": "number",
          "format": "int32",
          "description": "해당 주문에 걸린 체결 수",
          "example": 1
        }
      }
    },
    "OrderInfo": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "description": "주문의 고유 아이디",
          "example": "9ca023a5-851b-4fec-9f0a-48cd83c2eaae"
        },
        "side": {
          "type": "string",
          "description": "주문 종류",
          "example": "ask"
        },
        "ord_type": {
          "type": "string",
          "description": "주문 방식",
          "example": "limit"
        },
        "price": {
          "type": "string",
          "description": "주문 당시 화폐 가격",
          "example": 4280000
        },
        "state": {
          "type": "string",
          "description": "주문 상태",
          "example": "done"
        },
        "market": {
          "type": "string",
          "description": "마켓의 유일키",
          "example": "KRW-BTC"
        },
        "created_at": {
          "type": "string",
          "description": "주문 생성 시간",
          "example": "2019-01-04T13:48:09+09:00"
        },
        "volume": {
          "type": "string",
          "description": "사용자가 입력한 주문 양",
          "example": 1
        },
        "remaining_volume": {
          "type": "string",
          "description": "체결 후 남은 주문 양",
          "example": 0
        },
        "reserved_fee": {
          "type": "string",
          "description": "수수료로 예약된 비용",
          "example": 0
        },
        "remaining_fee": {
          "type": "string",
          "description": "남은 수수료",
          "example": 0
        },
        "paid_fee": {
          "type": "string",
          "description": "사용된 수수료",
          "example": 2140
        },
        "locked": {
          "type": "string",
          "description": "거래에 사용중인 비용",
          "example": 0
        },
        "executed_volume": {
          "type": "string",
          "description": "체결된 양",
          "example": 1
        },
        "trades_count": {
          "type": "number",
          "format": "int32",
          "description": "해당 주문에 걸린 체결 수",
          "example": 1
        },
        "trades": {
          "type": "array",
          "format": "array",
          "items": {
            "$ref": "#/definitions/Trade"
          },
          "description": "체결"
        }
      }
    },
    "Trade": {
      "type": "object",
      "properties": {
        "market": {
          "type": "string",
          "description": "마켓의 유일 키",
          "example": "KRW-BTC"
        },
        "uuid": {
          "type": "string",
          "description": "체결의 고유 아이디",
          "example": "9e8f8eba-7050-4837-8969-cfc272cbe083"
        },
        "price": {
          "type": "string",
          "description": "체결 가격",
          "example": 4280000
        },
        "volume": {
          "type": "string",
          "description": "체결 양",
          "example": 1
        },
        "funds": {
          "type": "string",
          "description": "체결된 총 가격",
          "example": 4280000
        },
        "side": {
          "type": "string",
          "description": "체결 종류",
          "example": "ask"
        },
        "created_at": {
          "type": "string",
          "description": "체결 시각",
          "example": "2019-01-04T04:48:09.000Z"
        }
      }
    },
    "OrderChance": {
      "type": "object",
      "properties": {
        "bid_fee": {
          "type": "string",
          "description": "매수 수수료 비율",
          "example": 0.0015
        },
        "ask_fee": {
          "type": "string",
          "description": "매도 수수료 비율",
          "example": 0.0015
        },
        "market": {
          "$ref": "#/definitions/Market"
        },
        "bid_account": {
          "$ref": "#/definitions/BidAccount"
        },
        "ask_account": {
          "$ref": "#/definitions/AskAccount"
        }
      }
    },
    "Market": {
      "type": "object",
      "description": "마켓에 대한 정보",
      "properties": {
        "id": {
          "type": "string",
          "description": "마켓 ID",
          "example": "KRW-BTC"
        },
        "name": {
          "type": "string",
          "description": "마켓 이름",
          "example": "BTC/KRW"
        },
        "order_types": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "지원 주문 방식",
          "example": [
            "limit"
          ]
        },
        "order_sides": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "지원 주문 종류",
          "example": [
            "ask",
            "bid"
          ]
        },
        "bid": {
          "$ref": "#/definitions/Bid"
        },
        "ask": {
          "$ref": "#/definitions/Ask"
        },
        "max_total": {
          "type": "string",
          "description": "최대 매도/매수 금액",
          "example": 100000000
        },
        "state": {
          "type": "string",
          "description": "마켓 운영 상태",
          "example": "activate"
        }
      }
    },
    "Bid": {
      "type": "object",
      "description": "매수 시 제약사항",
      "properties": {
        "currency": {
          "type": "string",
          "description": "화폐를 의미하는 영문 대문자 코드",
          "example": "KRW"
        },
        "price_unit": {
          "type": "string",
          "description": "주문금액 단위",
          "example": null
        },
        "min_total": {
          "type": "number",
          "description": "최소 매도/매수 금액",
          "example": 1000
        }
      }
    },
    "Ask": {
      "type": "object",
      "description": "매도 시 제약사항",
      "properties": {
        "currency": {
          "type": "string",
          "description": "화폐를 의미하는 영문 대문자 코드",
          "example": "KRW"
        },
        "price_unit": {
          "type": "string",
          "description": "주문금액 단위",
          "example": null
        },
        "min_total": {
          "type": "number",
          "description": "최소 매도/매수 금액",
          "example": 1000
        }
      }
    },
    "BidAccount": {
      "type": "object",
      "description": "매수 시 사용하는 화폐의 계좌 상태",
      "properties": {
        "currency": {
          "type": "string",
          "description": "화폐를 의미하는 영문 대문자 코드",
          "example": "KRW"
        },
        "balance": {
          "type": "string",
          "description": "주문가능 금액/수량",
          "example": 1000000
        },
        "locked": {
          "type": "string",
          "description": "주문 중 묶여있는 금액/수량",
          "example": 0
        },
        "avg_buy_price": {
          "type": "string",
          "description": "매수평균가",
          "example": 101000
        },
        "avg_buy_price_modified": {
          "type": "boolean",
          "description": "매수평균가 수정 여부",
          "example": false
        },
        "unit_currency": {
          "type": "string",
          "description": "평단가 기준 화폐",
          "example": "KRW"
        }
      }
    },
    "AskAccount": {
      "type": "object",
      "description": "매도 시 사용하는 화폐의 계좌 상태",
      "properties": {
        "currency": {
          "type": "string",
          "description": "화폐를 의미하는 영문 대문자 코드",
          "example": "KRW"
        },
        "balance": {
          "type": "string",
          "description": "주문가능 금액/수량",
          "example": 1000000
        },
        "locked": {
          "type": "string",
          "description": "주문 중 묶여있는 금액/수량",
          "example": 0
        },
        "avg_buy_price": {
          "type": "string",
          "description": "매수평균가",
          "example": 101000
        },
        "avg_buy_price_modified": {
          "type": "boolean",
          "description": "매수평균가 수정 여부",
          "example": false
        },
        "unit_currency": {
          "type": "string",
          "description": "평단가 기준 화폐",
          "example": "KRW"
        }
      }
    },
    "Withdraw": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "입출금 종류",
          "example": "withdraw"
        },
        "uuid": {
          "type": "string",
          "description": "출금의 고유 아이디",
          "example": "35a4f1dc-1db5-4d6b-89b5-7ec137875956"
        },
        "currency": {
          "type": "string",
          "description": "화폐를 의미하는 영문 대문자 코드",
          "example": "XRP"
        },
        "txid": {
          "type": "string",
          "description": "출금의 트랜잭션 아이디",
          "example": "98c15999f0bdc4ae0e8a-ed35868bb0c204fe6ec29e4058a3451e-88636d1040f4baddf943274ce37cf9cc"
        },
        "state": {
          "type": "string",
          "description": "출금 상태",
          "example": "DONE"
        },
        "created_at": {
          "type": "string",
          "description": "출금 생성 시간",
          "example": "2019-02-28T15:17:51+09:00"
        },
        "done_at": {
          "type": "string",
          "description": "출금 완료 시간",
          "example": "2019-02-28T15:22:12+09:00"
        },
        "amount": {
          "type": "string",
          "description": "출금 금액/수량",
          "example": 1
        },
        "fee": {
          "type": "string",
          "description": "출금 수수료",
          "example": 0
        },
        "transaction_type": {
          "type": "string",
          "description": "출금 유형\n- default : 일반출금\n- internal : 바로출금  String\n",
          "example": "default"
        }
      }
    },
    "WithdrawCoin": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "입출금 종류",
          "example": "withdraw"
        },
        "uuid": {
          "type": "string",
          "description": "출금의 고유 아이디",
          "example": "35a4f1dc-1db5-4d6b-89b5-7ec137875956"
        },
        "currency": {
          "type": "string",
          "description": "화폐를 의미하는 영문 대문자 코드",
          "example": "XRP"
        },
        "txid": {
          "type": "string",
          "description": "출금의 트랜잭션 아이디",
          "example": "98c15999f0bdc4ae0e8a-ed35868bb0c204fe6ec29e4058a3451e-88636d1040f4baddf943274ce37cf9cc"
        },
        "state": {
          "type": "string",
          "description": "출금 상태",
          "example": "DONE"
        },
        "created_at": {
          "type": "string",
          "description": "출금 생성 시간",
          "example": "2019-02-28T15:17:51+09:00"
        },
        "done_at": {
          "type": "string",
          "description": "출금 완료 시간",
          "example": "2019-02-28T15:22:12+09:00"
        },
        "amount": {
          "type": "string",
          "description": "출금 금액/수량",
          "example": 1
        },
        "fee": {
          "type": "string",
          "description": "출금 수수료",
          "example": 0
        },
        "krw_amount": {
          "type": "string",
          "description": "원화 환산 가격",
          "example": 80420
        },
        "transaction_type": {
          "type": "string",
          "description": "출금 유형\n- default : 일반출금\n- internal : 바로출금  String\n",
          "example": "default"
        }
      }
    },
    "WithdrawChance": {
      "type": "object",
      "properties": {
        "member_level": {
          "$ref": "#/definitions/MemberLevel"
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "account": {
          "$ref": "#/definitions/Account"
        },
        "withdraw_limit": {
          "$ref": "#/definitions/WithdrawLimit"
        }
      }
    },
    "MemberLevel": {
      "type": "object",
      "description": "사용자의 보안등급 정보",
      "properties": {
        "security_level": {
          "type": "number",
          "format": "int32",
          "description": "사용자의 보안 등급",
          "example": 3
        },
        "fee_level": {
          "type": "number",
          "format": "int32",
          "description": "사용자의 수수료 등급",
          "example": 0
        },
        "email_verified": {
          "type": "boolean",
          "description": "사용자의 이메일 인증 여부",
          "example": true
        },
        "identity_auth_verified": {
          "type": "boolean",
          "description": "사용자의 실명 인증 여부",
          "example": true
        },
        "bank_account_verified": {
          "type": "boolean",
          "description": "사용자의 계좌 인증 여부",
          "example": true
        },
        "kakao_pay_auth_verified": {
          "type": "boolean",
          "description": "사용자의 카카오페이 인증 여부",
          "example": false
        },
        "locked": {
          "type": "boolean",
          "description": "사용자의 계정 보호 상태",
          "example": false
        },
        "wallet_locked": {
          "type": "boolean",
          "description": "사용자의 출금 보호 상태",
          "example": false
        }
      }
    },
    "Currency": {
      "type": "object",
      "description": "화폐 정보",
      "properties": {
        "code": {
          "type": "string",
          "description": "화폐를 의미하는 영문 대문자 코드",
          "example": "BTC"
        },
        "withdraw_fee": {
          "type": "string",
          "description": "해당 화폐의 출금 수수료",
          "example": 0.0005
        },
        "is_coin": {
          "type": "boolean",
          "description": "화폐의 코인 여부",
          "example": true
        },
        "wallet_state": {
          "type": "string",
          "description": "해당 화폐의 지갑 상태",
          "example": "working"
        },
        "wallet_support": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "해당 화폐가 지원하는 입출금 정보",
          "example": [
            "deposit",
            "withdraw"
          ]
        }
      }
    },
    "WithdrawLimit": {
      "type": "object",
      "description": "출금 제약 정보",
      "properties": {
        "currency": {
          "type": "string",
          "description": "화폐를 의미하는 영문 대문자 코드",
          "example": "BTC"
        },
        "minimum": {
          "type": "string",
          "description": "출금 최소 금액/수량",
          "example": null
        },
        "onetime": {
          "type": "string",
          "description": "1회 출금 한도",
          "example": null
        },
        "daily": {
          "type": "string",
          "description": "1일 출금 한도",
          "example": 10
        },
        "remaining_daily": {
          "type": "string",
          "description": "1일 잔여 출금 한도",
          "example": 10
        },
        "remaining_daily_krw": {
          "type": "string",
          "description": "통합 1일 잔여 출금 한도",
          "example": 0
        },
        "fixed": {
          "type": "number",
          "format": "int32",
          "description": "출금 금액/수량 소수점 자리 수",
          "example": null
        },
        "can_withdraw": {
          "type": "boolean",
          "description": "출금 지원 여부",
          "example": true
        }
      }
    },
    "Deposit": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "입출금 종류",
          "example": "deposit"
        },
        "uuid": {
          "type": "string",
          "description": "입금에 대한 고유 아이디",
          "example": "94332e99-3a87-4a35-ad98-28b0c969f830"
        },
        "currency": {
          "type": "string",
          "description": "화폐를 의미하는 영문 대문자 코드",
          "example": "KRW"
        },
        "txid": {
          "type": "string",
          "description": "입금의 트랜잭션 아이디",
          "example": "9e37c537-6849-4c8b-a134-57313f5dfc5a"
        },
        "state": {
          "type": "string",
          "description": "입금 상태",
          "example": "ACCEPTED"
        },
        "created_at": {
          "type": "string",
          "description": "입금 생성 시간",
          "example": "2017-12-08T15:38:02+09:00"
        },
        "done_at": {
          "type": "string",
          "description": "입금 완료 시간",
          "example": "2019-02-28T15:22:12+09:00"
        },
        "amount": {
          "type": "string",
          "description": "입금 수량",
          "example": 100000
        },
        "fee": {
          "type": "string",
          "description": "입금 수수료",
          "example": 0
        },
        "transaction_type": {
          "type": "string",
          "description": "입금 유형\n- default : 일반출금\n- internal : 바로입금\n",
          "example": "default"
        }
      }
    },
    "DepositTransferResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "description": "요청 성공 여부",
          "example": true
        },
        "message": {
          "type": "string",
          "description": "요청 결과에 대한 메시지",
          "example": "BTC 입금주소를 생성중입니다."
        }
      }
    },
    "DepositCompleteResponse": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string",
          "description": "화폐를 의미하는 영문 대문자 코드",
          "example": "BTC"
        },
        "deposit_address": {
          "type": "string",
          "description": "입금 주소",
          "example": "3EusRwybuZUhVDeHL7gh3HSLmbhLcy7NqD"
        },
        "secondary_address": {
          "type": "string",
          "description": "2차 입금 주소",
          "example": null
        }
      }
    },
    "MarketInfo": {
      "type": "object",
      "properties": {
        "market": {
          "type": "string",
          "description": "업비트에서 제공중인 시장 정보",
          "example": "KRW-BTC"
        },
        "korean_name": {
          "type": "string",
          "description": "거래 대상 암호화폐 한글명",
          "example": "비트코인"
        },
        "english_name": {
          "type": "string",
          "description": "거래 대상 암호화폐 영문명",
          "example": "Bitcoin"
        },
        "market_warning": {
          "type": "string",
          "description": "유의 종목 여부\n- NONE (해당 사항 없음)\n- CAUTION (투자유의)\n",
          "example": "NONE"
        }
      }
    },
    "CandleMinutes": {
      "type": "object",
      "properties": {
        "market": {
          "type": "string",
          "description": "마켓명",
          "example": "KRW-BTC"
        },
        "candle_date_time_utc": {
          "type": "string",
          "description": "캔들 기준 시각 (UTC 기준)",
          "example": "2018-04-18T10:16:00"
        },
        "candle_date_time_kst": {
          "type": "string",
          "description": "캔들 기준 시각 (KST 기준)",
          "example": "2018-04-18T19:16:00"
        },
        "opening_price": {
          "type": "number",
          "format": "double",
          "description": "시가",
          "example": 8615000
        },
        "high_price": {
          "type": "number",
          "format": "double",
          "description": "고가",
          "example": 8618000
        },
        "low_price": {
          "type": "number",
          "format": "double",
          "description": "저가",
          "example": 8611000
        },
        "trade_price": {
          "type": "number",
          "format": "double",
          "description": "종가",
          "example": 8616000
        },
        "timestamp": {
          "type": "number",
          "format": "int64",
          "description": "해당 캔들에서 마지막 틱이 저장된 시각",
          "example": 1524046594584
        },
        "candle_acc_trade_price": {
          "type": "number",
          "format": "double",
          "description": "누적 거래 금액",
          "example": 60018891.90054
        },
        "candle_acc_trade_volume": {
          "type": "number",
          "format": "double",
          "description": "누적 거래량",
          "example": 6.96780929
        },
        "unit": {
          "type": "number",
          "format": "int32",
          "description": "분 단위(유닛)",
          "example": 1
        }
      }
    },
    "CandleDays": {
      "type": "object",
      "properties": {
        "market": {
          "type": "string",
          "description": "마켓명",
          "example": "KRW-BTC"
        },
        "candle_date_time_utc": {
          "type": "string",
          "description": "캔들 기준 시각 (UTC 기준)",
          "example": "2021-01-05T00:00:00"
        },
        "candle_date_time_kst": {
          "type": "string",
          "description": "캔들 기준 시각 (KST 기준)",
          "example": "2021-01-05T09:00:00"
        },
        "opening_price": {
          "type": "number",
          "format": "double",
          "description": "시가",
          "example": 36478000
        },
        "high_price": {
          "type": "number",
          "format": "double",
          "description": "고가",
          "example": 37379000
        },
        "low_price": {
          "type": "number",
          "format": "double",
          "description": "저가",
          "example": 34357000
        },
        "trade_price": {
          "type": "number",
          "format": "double",
          "description": "종가",
          "example": 36005000
        },
        "timestamp": {
          "type": "number",
          "format": "int64",
          "description": "해당 캔들에서 마지막 틱이 저장된 시각",
          "example": 1609852095082
        },
        "candle_acc_trade_price": {
          "type": "number",
          "format": "double",
          "description": "누적 거래 금액",
          "example": 285531738095.9435
        },
        "candle_acc_trade_volume": {
          "type": "number",
          "format": "double",
          "description": "누적 거래량",
          "example": 7940.45654711
        },
        "prev_closing_price": {
          "type": "number",
          "format": "double",
          "description": "전일 종가 (UTC 0시 기준)",
          "example": 36460000
        },
        "change_price": {
          "type": "number",
          "format": "double",
          "description": "전일 종가 대비 변화 금액",
          "example": -455000
        },
        "change_rate": {
          "type": "number",
          "format": "double",
          "description": "전일 종가 대비 변화량",
          "example": -0.0124794295
        },
        "converted_trade_price": {
          "type": "number",
          "format": "double",
          "description": "종가 환산 화폐 단위로 환산된 가격\n(요청에 convertingPriceUnit 파라미터 없을 시 해당 필드 포함되지 않음.)\n",
          "example": null
        }
      }
    },
    "CandleDate": {
      "type": "object",
      "properties": {
        "market": {
          "type": "string",
          "description": "마켓명",
          "example": "KRW-BTC"
        },
        "candle_date_time_utc": {
          "type": "string",
          "description": "캔들 기준 시각 (UTC 기준)",
          "example": "2021-01-04T00:00:00"
        },
        "candle_date_time_kst": {
          "type": "string",
          "description": "캔들 기준 시각 (KST 기준)",
          "example": "2021-01-04T09:00:00"
        },
        "opening_price": {
          "type": "number",
          "format": "double",
          "description": "시가",
          "example": 37537000
        },
        "high_price": {
          "type": "number",
          "format": "double",
          "description": "고가",
          "example": 38476000
        },
        "low_price": {
          "type": "number",
          "format": "double",
          "description": "저가",
          "example": 33000000
        },
        "trade_price": {
          "type": "number",
          "format": "double",
          "description": "종가",
          "example": 36108000
        },
        "timestamp": {
          "type": "number",
          "format": "int64",
          "description": "해당 캔들에서 마지막 틱이 저장된 시각",
          "example": 1609852844226
        },
        "candle_acc_trade_price": {
          "type": "number",
          "format": "double",
          "description": "누적 거래 금액",
          "example": 1134912787515.7104
        },
        "candle_acc_trade_volume": {
          "type": "number",
          "format": "double",
          "description": "누적 거래량",
          "example": 31596.95988536
        },
        "first_day_of_period": {
          "type": "string",
          "description": "캔들 기간의 가장 첫 날",
          "example": "2021-01-04T00:00:00.000Z"
        }
      }
    },
    "TradeTicks": {
      "type": "object",
      "properties": {
        "market": {
          "type": "string",
          "description": "마켓 구분 코드",
          "example": "KRW-BTC"
        },
        "trade_date_utc": {
          "type": "string",
          "description": "체결 일자 (UTC 기준)",
          "example": "2021-01-05T00:00:00.000Z"
        },
        "trade_time_utc": {
          "type": "string",
          "description": "체결 시각 (UTC 기준)",
          "example": 49049
        },
        "timestamp": {
          "type": "number",
          "format": "int64",
          "description": "체결 타임스탬프",
          "example": 1609853849000
        },
        "trade_price": {
          "type": "number",
          "format": "double",
          "description": "체결 가격",
          "example": 36079000
        },
        "trade_volume": {
          "type": "number",
          "format": "double",
          "description": "체결량",
          "example": 0.00044778
        },
        "prev_closing_price": {
          "type": "number",
          "format": "double",
          "description": "전일 종가",
          "example": 36462000
        },
        "change_price": {
          "type": "number",
          "format": "double",
          "description": "변화량",
          "example": -383000
        },
        "ask_bid": {
          "type": "string",
          "description": "매도/매수",
          "example": "BID"
        },
        "sequential_id": {
          "type": "number",
          "format": "int64",
          "description": "체결 번호 (Unique)\n\n`sequential_id` 필드는 체결의 유일성 판단을 위한 근거로 쓰일 수 있습니다.\n하지만 체결의 순서를 보장하지는 못합니다.\n",
          "example": 1609853849000002
        }
      }
    },
    "Ticker": {
      "type": "object",
      "properties": {
        "market": {
          "type": "string",
          "description": "종목 구분 코드",
          "example": "KRW-BTC"
        },
        "trade_date": {
          "type": "string",
          "description": "최근 거래 일자(UTC)",
          "example": 20210105
        },
        "trade_time": {
          "type": "string",
          "description": "최근 거래 시각(UTC)",
          "example": 135702
        },
        "trade_date_kst": {
          "type": "string",
          "description": "최근 거래 일자(KST)",
          "example": 20210105
        },
        "trade_time_kst": {
          "type": "string",
          "description": "최근 거래 시각(KST)",
          "example": 225702
        },
        "opening_price": {
          "type": "number",
          "format": "double",
          "description": "시가",
          "example": 36478000
        },
        "high_price": {
          "type": "number",
          "format": "double",
          "description": "고가",
          "example": 37379000
        },
        "low_price": {
          "type": "number",
          "format": "double",
          "description": "저가",
          "example": 34357000
        },
        "trade_price": {
          "type": "number",
          "format": "double",
          "description": "종가",
          "example": 36025000
        },
        "prev_closing_price": {
          "type": "number",
          "format": "double",
          "description": "전일 종가",
          "example": 36462000
        },
        "change": {
          "type": "string",
          "description": "EVEN : 보합\nRISE : 상승\nFALL : 하락\n",
          "example": "FALL"
        },
        "change_price": {
          "type": "number",
          "format": "double",
          "description": "변화액의 절대값",
          "example": 437000
        },
        "change_rate": {
          "type": "number",
          "format": "double",
          "description": "변화율의 절대값",
          "example": 0.0119850804
        },
        "signed_change_price": {
          "type": "number",
          "format": "double",
          "description": "부호가 있는 변화액",
          "example": -437000
        },
        "signed_change_rate": {
          "type": "number",
          "format": "double",
          "description": "부호가 있는 변화율",
          "example": -0.0119850804
        },
        "trade_volume": {
          "type": "number",
          "format": "double",
          "description": "가장 최근 거래량",
          "example": 0.0005
        },
        "acc_trade_price": {
          "type": "number",
          "format": "double",
          "description": "누적 거래대금 (UTC 0시 기준)",
          "example": 290415601241.5452
        },
        "acc_trade_price_24h": {
          "type": "number",
          "format": "double",
          "description": "24시간 누적 거래대금",
          "example": 427743585506.9105
        },
        "acc_trade_volume": {
          "type": "number",
          "format": "double",
          "description": "누적 거래량 (UTC 0시 기준)",
          "example": 8075.76782922
        },
        "acc_trade_volume_24h": {
          "type": "number",
          "format": "double",
          "description": "24시간 누적 거래량",
          "example": 11899.89832832
        },
        "highest_52_week_price": {
          "type": "number",
          "format": "double",
          "description": "52주 신고가",
          "example": 39453000
        },
        "highest_52_week_date": {
          "type": "string",
          "description": "52주 신고가 달성일",
          "example": "2021-01-03T00:00:00.000Z"
        },
        "lowest_52_week_price": {
          "type": "number",
          "format": "double",
          "description": "52주 신저가",
          "example": 5489000
        },
        "lowest_52_week_date": {
          "type": "string",
          "description": "52주 신저가 달성일",
          "example": "2020-03-13T00:00:00.000Z"
        },
        "timestamp": {
          "type": "number",
          "format": "int64",
          "description": "타임스탬프",
          "example": 1609855022921
        }
      }
    }
  }
}